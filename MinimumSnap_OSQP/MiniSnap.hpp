/*
 * @Author: Technician13
 * @Date: 2021-10-03 14:03:49
 * @LastEditTime: 2021-10-05 09:31:05
 * @LastEditors: Technician13
 * @Description: 
 */

#ifndef MINISNAP_HPP
#define MINISNAP_HPP

#include <osqp.h>
#include <iostream>    
#include <Eigen/Dense>
#include <vector>
#include <math.h>
#include <string>

class MiniSnap
{
    private:
        c_float *P_x;
        c_int    P_nnz;
        c_int   *P_i;
        c_int   *P_p;
        c_float *q;
        c_int    A_nnz;
        c_float *A_x;
        c_int   *A_i;
        c_int   *A_p;
        c_float *l;
        c_float *u;
        c_int    n;
        c_int    m;
        
        // c_float P_x[12]{ 4800.0, 1440.0, 1440.0, 576.0, 
        //                  4800.0 * 7.0, 1440.0 * 3.0, 1440.0 * 3.0, 576.0, 
        //                  4800.0 * 19.0, 1440.0 * 5.0, 1440.0 * 5.0, 576.0 };
        // c_int   P_nnz  = 12;
        // c_int   P_i[12]{ 0, 1, 0, 1, 
        //                  6, 7, 6, 7, 
        //                  12, 13, 12, 13 };
        // c_int   P_p[19]{ 0, 2, 4, 4, 4, 4, 4, 
        //                  6, 8, 8, 8, 8, 8, 
        //                  10, 12, 12, 12, 12, 12 };
        // c_float q[18]{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
        //                0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
        //                0.0, 0.0, 0.0, 0.0, 0.0, 0.0 };
        // c_float A_x[99]{ 1.0, 5.0, 20.0, 5.0, 
        //                  1.0, 4.0, 12.0, 4.0,
        //                  1.0, 3.0, 6.0,  3.0,
        //                  1.0, 2.0, 2.0,  2.0,
        //                  1.0, 1.0, 1.0,  1.0, 
        //                  1.0, 1.0, 
        //                  1.0, -1.0, -5.0, -20.0, 32.0, 80.0, 160.0, 80.0,
        //                  1.0, -1.0, -4.0, -12.0, 16.0, 32.0, 48.0,  32.0,
        //                  1.0, -1.0, -3.0, -6.0,  8.0,  12.0, 12.0,  12.0,
        //                  1.0, -1.0, -2.0, -2.0,  4.0,  4.0,  2.0,   4.0,
        //                  1.0, -1.0, -1.0, 2.0,   1.0,  1.0,  
        //                  1.0, -1.0, 1.0,
        //                  32.0, 243.0, -32.0, -80.0, -160.0, 405.0, 540.0, 
        //                  16.0, 81.0, -16.0, -32.0, -48.0, 108.0, 108.0, 
        //                  8.0, 27.0, -8.0, -12.0, -12.0, 27.0, 18.0, 
        //                  4.0, 9.0, -4.0, -4.0, -2.0, 6.0, 2.0, 
        //                  2.0, 3.0, -2.0, -1.0, 1.0, 
        //                  1.0, 1.0, -1.0 };
        // c_int   A_nnz  = 99;
        // c_int   A_i[99]{ 4, 5, 6, 11, 
        //                  4, 5, 6, 11,
        //                  4, 5, 6, 11,
        //                  4, 5, 6, 11,
        //                  4, 5, 10,11,
        //                  0, 4, 
        //                  1, 4, 5, 6, 7, 8, 9, 12, 
        //                  1, 4, 5, 6, 7, 8, 9, 12, 
        //                  1, 4, 5, 6, 7, 8, 9, 12, 
        //                  1, 4, 5, 6, 7, 8, 9, 12, 
        //                  1, 4, 5, 7, 8, 12,
        //                  1, 4, 7, 
        //                  2, 3, 7, 8, 9, 13, 14, 
        //                  2, 3, 7, 8, 9, 13, 14, 
        //                  2, 3, 7, 8, 9, 13, 14, 
        //                  2, 3, 7, 8, 9, 13, 14, 
        //                  2, 3, 7, 8, 13, 
        //                  2, 3, 7 };
        // c_int   A_p[19]{ 0, 4, 8, 12, 16, 20, 22, 30, 38, 46, 54, 60, 63, 70, 77, 84, 91, 96, 99};
        // c_float l[15]{ 0.0, 5.0, 1.0, 3.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -3.0, -3.0, 0.0, 0.0 };
        // c_float u[15]{ 0.0, 5.0, 1.0, 3.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -3.0, -3.0, 0.0, 0.0 };
        // c_int n = 18;
        // c_int m = 15;

        const int segment;
        std::vector<double> t;
        double T;

    protected:

    public:
        MiniSnap(int p_segment);
        virtual ~MiniSnap(void);
        void SetParas(std::vector<double> p_proportion, double p_T, std::vector<double> p_point, std::vector<double> p_vel);
        void SolveOpt();
};

#endif